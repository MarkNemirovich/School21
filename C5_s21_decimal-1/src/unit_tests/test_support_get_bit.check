#suite test_get_bit
#test test_get_bit1
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 0);
    ck_assert_int_eq(code, 1);

#test test_get_bit2
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 1);
    ck_assert_int_eq(code, 1);

#test test_get_bit3
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 2);
    ck_assert_int_eq(code, 1);

#test test_get_bit4
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 3);
    ck_assert_int_eq(code, 1);

#test test_get_bit5
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 4);
    ck_assert_int_eq(code, 1);

#test test_get_bit6
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 5);
    ck_assert_int_eq(code, 1);

#test test_get_bit7
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 6);
    ck_assert_int_eq(code, 1);

#test test_get_bit8
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 7);
    ck_assert_int_eq(code, 1);

#test test_get_bit9
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 8);
    ck_assert_int_eq(code, 1);

#test test_get_bit10
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 9);
    ck_assert_int_eq(code, 1);

#test test_get_bit11
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 10);
    ck_assert_int_eq(code, 1);

#test test_get_bit12
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 11);
    ck_assert_int_eq(code, 1);

#test test_get_bit13
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 12);
    ck_assert_int_eq(code, 1);

#test test_get_bit14
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 13);
    ck_assert_int_eq(code, 1);

#test test_get_bit15
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 14);
    ck_assert_int_eq(code, 1);

#test test_get_bit16
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 15);
    ck_assert_int_eq(code, 1);

#test test_get_bit17
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 16);
    ck_assert_int_eq(code, 1);

#test test_get_bit18
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 17);
    ck_assert_int_eq(code, 1);

#test test_get_bit19
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 18);
    ck_assert_int_eq(code, 1);
    
#test test_get_bit20
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 19);
    ck_assert_int_eq(code, 1);

#test test_get_bit21
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 20);
    ck_assert_int_eq(code, 1);

#test test_get_bit22
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 21);
    ck_assert_int_eq(code, 1);

#test test_get_bit23
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 22);
    ck_assert_int_eq(code, 1);

#test test_get_bit24
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 23);
    ck_assert_int_eq(code, 1);

#test test_get_bit25
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 24);
    ck_assert_int_eq(code, 1);

#test test_get_bit26
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 25);
    ck_assert_int_eq(code, 1);

#test test_get_bit27
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 26);
    ck_assert_int_eq(code, 1);

#test test_get_bit28
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 27);
    ck_assert_int_eq(code, 1);

#test test_get_bit29
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 28);
    ck_assert_int_eq(code, 1);
    
#test test_get_bit30
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 29);
    ck_assert_int_eq(code, 1);

#test test_get_bit31
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 30);
    ck_assert_int_eq(code, 1);

#test test_get_bit32
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[0], 31);
    ck_assert_int_eq(code, 1);

#test test_get_bit33
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 0);
    ck_assert_int_eq(code, 0);

#test test_get_bit34
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 1);
    ck_assert_int_eq(code, 0);

#test test_get_bit35
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 2);
    ck_assert_int_eq(code, 0);

#test test_get_bit36
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 3);
    ck_assert_int_eq(code, 1);

#test test_get_bit37
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 4);
    ck_assert_int_eq(code, 1);

#test test_get_bit38
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 5);
    ck_assert_int_eq(code, 1);

#test test_get_bit39
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 6);
    ck_assert_int_eq(code, 1);

#test test_get_bit40
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 7);
    ck_assert_int_eq(code, 0);

#test test_get_bit41
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 8);
    ck_assert_int_eq(code, 0);

#test test_get_bit42
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 9);
    ck_assert_int_eq(code, 1);

#test test_get_bit43
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 10);
    ck_assert_int_eq(code, 1);

#test test_get_bit44
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 11);
    ck_assert_int_eq(code, 0);

#test test_get_bit45
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 12);
    ck_assert_int_eq(code, 1);

#test test_get_bit46
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 13);
    ck_assert_int_eq(code, 0);

#test test_get_bit47
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 14);
    ck_assert_int_eq(code, 1);

#test test_get_bit48
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 15);
    ck_assert_int_eq(code, 0);

#test test_get_bit49
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 16);
    ck_assert_int_eq(code, 0);

#test test_get_bit50
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 17);
    ck_assert_int_eq(code, 0);

#test test_get_bit51
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 18);
    ck_assert_int_eq(code, 1);
    
#test test_get_bit52
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 19);
    ck_assert_int_eq(code, 0);

#test test_get_bit53
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 20);
    ck_assert_int_eq(code, 1);

#test test_get_bit54
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 21);
    ck_assert_int_eq(code, 1);

#test test_get_bit55
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 22);
    ck_assert_int_eq(code, 0);

#test test_get_bit56
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 23);
    ck_assert_int_eq(code, 0);

#test test_get_bit57
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 24);
    ck_assert_int_eq(code, 0);

#test test_get_bit58
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 25);
    ck_assert_int_eq(code, 1);

#test test_get_bit59
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 26);
    ck_assert_int_eq(code, 0);

#test test_get_bit60
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 27);
    ck_assert_int_eq(code, 0);

#test test_get_bit61
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 28);
    ck_assert_int_eq(code, 1);
    
#test test_get_bit62
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 29);
    ck_assert_int_eq(code, 0);

#test test_get_bit63
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 30);
    ck_assert_int_eq(code, 0);

#test test_get_bit64
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[1], 31);
    ck_assert_int_eq(code, 0);

#test test_get_bit65
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 0);
    ck_assert_int_eq(code, 0);

#test test_get_bit66
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 1);
    ck_assert_int_eq(code, 0);

#test test_get_bit67
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 2);
    ck_assert_int_eq(code, 0);

#test test_get_bit68
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 3);
    ck_assert_int_eq(code, 0);

#test test_get_bit69
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 4);
    ck_assert_int_eq(code, 0);

#test test_get_bit70
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 5);
    ck_assert_int_eq(code, 0);

#test test_get_bit71
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 6);
    ck_assert_int_eq(code, 0);

#test test_get_bit72
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 7);
    ck_assert_int_eq(code, 0);

#test test_get_bit73
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 8);
    ck_assert_int_eq(code, 0);

#test test_get_bit74
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 9);
    ck_assert_int_eq(code, 0);

#test test_get_bit75
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 10);
    ck_assert_int_eq(code, 0);

#test test_get_bit76
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 11);
    ck_assert_int_eq(code, 0);

#test test_get_bit77
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 12);
    ck_assert_int_eq(code, 0);

#test test_get_bit78
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 13);
    ck_assert_int_eq(code, 0);

#test test_get_bit79
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 14);
    ck_assert_int_eq(code, 0);

#test test_get_bit80
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 15);
    ck_assert_int_eq(code, 0);

#test test_get_bit81
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 16);
    ck_assert_int_eq(code, 0);

#test test_get_bit82
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 17);
    ck_assert_int_eq(code, 0);

#test test_get_bit83
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 18);
    ck_assert_int_eq(code, 0);
    
#test test_get_bit84
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 19);
    ck_assert_int_eq(code, 0);

#test test_get_bit85
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 20);
    ck_assert_int_eq(code, 0);

#test test_get_bit86
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 21);
    ck_assert_int_eq(code, 0);

#test test_get_bit87
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 22);
    ck_assert_int_eq(code, 0);

#test test_get_bit88
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 23);
    ck_assert_int_eq(code, 0);

#test test_get_bit89
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 24);
    ck_assert_int_eq(code, 0);

#test test_get_bit90
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 25);
    ck_assert_int_eq(code, 0);

#test test_get_bit91
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 26);
    ck_assert_int_eq(code, 0);

#test test_get_bit92
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 27);
    ck_assert_int_eq(code, 0);

#test test_get_bit93
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 28);
    ck_assert_int_eq(code, 0);
    
#test test_get_bit94
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 29);
    ck_assert_int_eq(code, 0);

#test test_get_bit95
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 30);
    ck_assert_int_eq(code, 0);

#test test_get_bit96
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[2], 31);
    ck_assert_int_eq(code, 0);

#test test_get_bit97
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 0);
    ck_assert_int_eq(code, 0);
    
#test test_get_bit98
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 1);
    ck_assert_int_eq(code, 0);

#test test_get_bit99
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 2);
    ck_assert_int_eq(code, 0);

#test test_get_bit100
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 3);
    ck_assert_int_eq(code, 0);

#test test_get_bit101
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 4);
    ck_assert_int_eq(code, 0);

#test test_get_bit102
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 5);
    ck_assert_int_eq(code, 0);

#test test_get_bit103
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 6);
    ck_assert_int_eq(code, 0);

#test test_get_bit104
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 7);
    ck_assert_int_eq(code, 0);

#test test_get_bit105
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 8);
    ck_assert_int_eq(code, 0);

#test test_get_bit106
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 9);
    ck_assert_int_eq(code, 0);

#test test_get_bit107
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 10);
    ck_assert_int_eq(code, 0);

#test test_get_bit108
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 11);
    ck_assert_int_eq(code, 0);

#test test_get_bit109
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 12);
    ck_assert_int_eq(code, 0);

#test test_get_bit110
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 13);
    ck_assert_int_eq(code, 0);

#test test_get_bit111
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 14);
    ck_assert_int_eq(code, 0);

#test test_get_bit112
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 15);
    ck_assert_int_eq(code, 0);

#test test_get_bit113
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 16);
    ck_assert_int_eq(code, 0);

#test test_get_bit114
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 17);
    ck_assert_int_eq(code, 0);

#test test_get_bit115
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 18);
    ck_assert_int_eq(code, 1);
    
#test test_get_bit116
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 19);
    ck_assert_int_eq(code, 0);

#test test_get_bit117
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 20);
    ck_assert_int_eq(code, 1);

#test test_get_bit118
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 21);
    ck_assert_int_eq(code, 0);

#test test_get_bit119
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 22);
    ck_assert_int_eq(code, 0);

#test test_get_bit120
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 23);
    ck_assert_int_eq(code, 0);

#test test_get_bit121
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 24);
    ck_assert_int_eq(code, 0);

#test test_get_bit122
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 25);
    ck_assert_int_eq(code, 0);

#test test_get_bit123
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 26);
    ck_assert_int_eq(code, 0);

#test test_get_bit124
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 27);
    ck_assert_int_eq(code, 0);

#test test_get_bit125
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 28);
    ck_assert_int_eq(code, 0);
    
#test test_get_bit126
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 29);
    ck_assert_int_eq(code, 0);

#test test_get_bit127
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 30);
    ck_assert_int_eq(code, 0);

#test test_get_bit128
    s21_decimal decimal = {{0xFFFFFFFF, 0x12345678, 0x00000000, 0x140000}};
    int code = s21_get_bit(decimal.bits[3], 31);
    ck_assert_int_eq(code, 0);

#test test_get_bit129
  s21_decimal decimal = {{0}};
  // decimal = 0.68985125146545154;

  decimal.bits[0] = 0b00010111001001010100110000000010;
  decimal.bits[1] = 0b00000000111101010001010110011011;
  decimal.bits[2] = 0b00000000000000000000000000000000;
  decimal.bits[3] = 0b00000000000100010000000000000000;

  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 0), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 1), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 2), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 3), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 4), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 5), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 6), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 7), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 8), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 9), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 10), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 11), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 12), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 13), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 14), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 15), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 16), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 17), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 18), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 19), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 20), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 21), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 22), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 23), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 24), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 25), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 26), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 27), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 28), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 29), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 30), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[0], 31), 0);

  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 0), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 1), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 2), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 3), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 4), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 5), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 6), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 7), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 8), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 9), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 10), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 11), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 12), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 13), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 14), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 15), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 16), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 17), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 18), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 19), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 20), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 21), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 22), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 23), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 24), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 25), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 26), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 27), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 28), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 29), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 30), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[1], 31), 0);
  
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 0), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 1), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 2), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 3), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 4), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 5), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 6), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 7), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 8), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 9), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 10), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 11), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 12), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 13), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 14), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 15), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 16), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 17), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 18), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 19), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 20), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 21), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 22), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 23), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 24), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 25), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 26), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 27), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 28), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 29), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 30), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[2], 31), 0);
  
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 0), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 1), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 2), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 3), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 4), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 5), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 6), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 7), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 8), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 9), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 10), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 11), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 12), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 13), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 14), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 15), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 16), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 17), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 18), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 19), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 20), 1);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 21), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 22), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 23), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 24), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 25), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 26), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 27), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 28), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 29), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 30), 0);
  ck_assert_int_eq(s21_get_bit(decimal.bits[3], 31), 0);
